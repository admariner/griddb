/*
	Copyright (c) 2017 TOSHIBA Digital Solutions Corporation

	This program is free software: you can redistribute it and/or modify
	it under the terms of the GNU Affero General Public License as
	published by the Free Software Foundation, either version 3 of the
	License, or (at your option) any later version.

	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU Affero General Public License for more details.

	You should have received a copy of the GNU Affero General Public License
	along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
#include "sql_internal_parser.h"
/**
 * @file   lempar.cpp
 * @brief  C++ Driver template for the LEMON parser generator.
 *         Just ported into C++ style.
 *
 */
/* The code below are written into .cpp file */

namespace lemon_SQLParser {
const SQLParser_YYACTIONTYPE SQLParser::yy_action[] = {
 /*     0 */   313,    4,   72,  652,  683,   83,  449,  697,  398,  176,
 /*    10 */   662,  200,  652,  340,  339,  685,  606,  670,  653,  660,
 /*    20 */   189,  667,  100,  655,   94,   93,  414,  653,  659,   80,
 /*    30 */    81,  342,  700,  698,  346,   94,   93,  313,  668,  471,
 /*    40 */   453,  631,  630,  490,  696,  141,  690,  345,  303,  641,
 /*    50 */   641,  597,  426,  425,  332,  107,  331,  330,  564,  100,
 /*    60 */   387,   94,   93,  681,  680,  679,  525,  678,  677,  676,
 /*    70 */   675,  674,  673,  435,  466,  463,  460,  616,  515,  639,
 /*    80 */   672,  671,  415,  119,  566,  571,  641,  641,   31,  394,
 /*    90 */   658,  657,  395,  457,  541,  393,   88,   85,  454,  106,
 /*   100 */   299,  109,   86,  634,  633,  636,  635,   99,  103,  101,
 /*   110 */   104,  102,  493,   98,   97,   96,   95,   92,   91,   90,
 /*   120 */    89,  669,  577,  640,  640,  608,  294,   82,   92,   91,
 /*   130 */    90,   89,  667,  606,  648,  647,  106,  338,  109,   86,
 /*   140 */   634,  633,  636,  635,   99,  103,  101,  104,  102,  668,
 /*   150 */    98,   97,   96,   95,   92,   91,   90,   89,  313,   94,
 /*   160 */    93,  752,  606,  431,  430,  335,  651,  334,  333,  312,
 /*   170 */   656,  654,  414,  317,  629,  651,   28,  638,  637,  181,
 /*   180 */   100,  652,   94,   93,  473,  292,  560,  559,  622,  665,
 /*   190 */   652,  340,  339,  132,   37,  313,  448,  621,  485,  452,
 /*   200 */   570,  277,  453,  631,  630,  553,  552,  641,  641,  569,
 /*   210 */   177,  203,  688,  214,  212,  184,  207,  100,  603,   94,
 /*   220 */    93,  587,  429,  650,  307,  665,  306,  305,  304,  118,
 /*   230 */   566,  571,  179,  153,  153,  452,  473,  154,  601,  627,
 /*   240 */    94,   93,  428,  666,  641,  641,   55,  201,   98,   97,
 /*   250 */    96,   95,   92,   91,   90,   89,  686,  106,  172,  109,
 /*   260 */    86,  634,  633,  636,  635,   99,  103,  101,  104,  102,
 /*   270 */   210,   98,   97,   96,   95,   92,   91,   90,   89,  606,
 /*   280 */   431,  430,  335,  473,  334,  333,  312,  599,  337,  369,
 /*   290 */   217,  427,  367,   16,  106,  666,  109,   86,  634,  633,
 /*   300 */   636,  635,   99,  103,  101,  104,  102,  482,   98,   97,
 /*   310 */    96,   95,   92,   91,   90,   89,  313,  594,  453,  631,
 /*   320 */   630,  424,  170,  613,  103,  101,  104,  102,   87,   98,
 /*   330 */    97,   96,   95,   92,   91,   90,   89,  473,  100,  168,
 /*   340 */    94,   93,  666,  168,  609,  300,  544,   55,  592,  473,
 /*   350 */   534,  443,  423,  313,   94,   93,   78,  311,   76,   55,
 /*   360 */   373,  539,  538,  320,    6,  641,  641,  240,  319,  590,
 /*   370 */   412,  360,  361,  422,  277,  100,  284,   94,   93,  137,
 /*   380 */   183,  131,  445,  453,  631,  630,  685,  356,  194,  446,
 /*   390 */   665,  453,  631,  630,  587,  524,  666,  556,  555,  152,
 /*   400 */   452,  446,  641,  641,   92,   91,   90,   89,  666,  547,
 /*   410 */   233,  612,  610,  611,   71,  106,  231,  109,   86,  634,
 /*   420 */   633,  636,  635,   99,  103,  101,  104,  102,   68,   98,
 /*   430 */    97,   96,   95,   92,   91,   90,   89,  626,  103,  101,
 /*   440 */   104,  102,   79,   98,   97,   96,   95,   92,   91,   90,
 /*   450 */    89,  479,  106,  402,  109,   86,  634,  633,  636,  635,
 /*   460 */    99,  103,  101,  104,  102,  481,   98,   97,   96,   95,
 /*   470 */    92,   91,   90,   89,  313,    4,  168,  576,  256,   83,
 /*   480 */   449,  186,  473,  534,  662,  473,  477,  440,  418,  266,
 /*   490 */   565,  665,   55,  660,  370,   16,  100,  655,   94,   93,
 /*   500 */    14,  452,  659,   80,   81,  342,  684,  473,  281,  585,
 /*   510 */    30,  313,  620,  471,  274,  464,  229,   55,  365,  662,
 /*   520 */   537,  363,  209,  641,  641,  260,   77,  498,  660,  411,
 /*   530 */   685,  205,  655,  100,  446,   94,   93,  659,  243,  328,
 /*   540 */   416,  666,  497,  260,  666,  473,  495,   61,  466,  463,
 /*   550 */   460,  274,  578,  325,  277,   55,   88,   85,  454,  403,
 /*   560 */   641,  641,  619,  682,  658,  657,  666,  457,  178,  203,
 /*   570 */    88,   85,  454,  106,  587,  109,   86,  634,  633,  636,
 /*   580 */   635,   99,  103,  101,  104,  102,  622,   98,   97,   96,
 /*   590 */    95,   92,   91,   90,   89,  621,  344,  441,   18,  658,
 /*   600 */   657,   82,  648,  647,  666,  469,   88,   85,  454,  171,
 /*   610 */   106,  467,  109,   86,  634,  633,  636,  635,   99,  103,
 /*   620 */   101,  104,  102,  341,   98,   97,   96,   95,   92,   91,
 /*   630 */    90,   89,  563,  250,  503,  313,  473, 1023,  151,  491,
 /*   640 */     2,  473,  110,  687,  656,  654,   52,   74,  397,  195,
 /*   650 */    28,   55,  502,  501,  486,  473,  182,  100,  187,   94,
 /*   660 */    93,  583,  685,  775,  343,   33,  665,  414,  665,  392,
 /*   670 */   310,  218,  313,  324,  461,  195,  452,  687,  452,  656,
 /*   680 */    30,  568,  341,  531,  641,  641,   19,  296,  295,  662,
 /*   690 */   105,  240,  309,  446,  100,  666,   94,   93,  660,  323,
 /*   700 */   666,  348,  655,  185,  341,  473,  473,  659,  650,  328,
 /*   710 */   416,  699,    2,  665,  666,   57,   33,  685,  282,  521,
 /*   720 */   249,  641,  641,  452,  248,  572,  571,  283,  329,  505,
 /*   730 */   698,  346,  247,  407,  106,  286,  109,   86,  634,  633,
 /*   740 */   636,  635,   99,  103,  101,  104,  102,  308,   98,   97,
 /*   750 */    96,   95,   92,   91,   90,   89,  285,  473,  473,  341,
 /*   760 */   357,  505,  504,  583,  666,  666,  355,   59,   34,  658,
 /*   770 */   657,  106,  190,  109,   86,  634,  633,  636,  635,   99,
 /*   780 */   103,  101,  104,  102,  557,   98,   97,   96,   95,   92,
 /*   790 */    91,   90,   89,  508,  473,  473,  313,    4,  506,  623,
 /*   800 */   473,   83,  449,  687,   56,   55,  662,  646,  149,  240,
 /*   810 */    58,  292,  240,   11,  480,  660,  666,  666,  100,  655,
 /*   820 */    94,   93,  448,  240,  659,   80,   81,  342,  458,  473,
 /*   830 */   318,  473,  473,  313,  473,  471,  241,  193,  148,   55,
 /*   840 */   191,   41,   55,  645,  120,  641,  641,  446,  644,  656,
 /*   850 */   391,  208,   10,  666,  666,  100,  147,   94,   93,  666,
 /*   860 */   465,  623,  455,  623,    9,  450,  473,  473,  623,  473,
 /*   870 */   466,  463,  460,  685,  643,  146,  123,  122,  238,  121,
 /*   880 */     8,  446,  641,  641,  446,  642,  658,  657,  666,  457,
 /*   890 */   666,  666,  632,  666,    1,  106,  451,  109,   86,  634,
 /*   900 */   633,  636,  635,   99,  103,  101,  104,  102,  239,   98,
 /*   910 */    97,   96,   95,   92,   91,   90,   89,  628,    7,  625,
 /*   920 */    79,  473,  462,   82,  459,  666,  666,  135,  666,  456,
 /*   930 */   624,   33,  106,   29,  109,   86,  634,  633,  636,  635,
 /*   940 */    99,  103,  101,  104,  102,   27,   98,   97,   96,   95,
 /*   950 */    92,   91,   90,   89,  313,   71,   24,   69,  473,  438,
 /*   960 */   437,  175,  618,  180,  434,  237,  656,  654,  117,  236,
 /*   970 */   617,  473,   28,  614,  473,  473,  100,  235,   94,   93,
 /*   980 */   666,   33,  605,  169,   55,   55,  473,  202,  473,  575,
 /*   990 */   199,  473,  473,  604,   13,  473,  116,  602,   33,  405,
 /*  1000 */   600,  127,  126,  641,  641,  125,  598,  420,  375,  596,
 /*  1010 */   752,  595,  593,  591,    3,  589,  573,  666,   83,  449,
 /*  1020 */   265,  473,  264,  662,  198,  473,  446,  446,  263,  401,
 /*  1030 */   666,   33,  660,  666,  666,  124,  655,  197,  174,  327,
 /*  1040 */    22,  659,   80,   81,  342,  666,  554,  666,   20,  548,
 /*  1050 */   666,  666,  471,  106,  666,   84,   86,  634,  633,  636,
 /*  1060 */   635,   99,  103,  101,  104,  102,  558,   98,   97,   96,
 /*  1070 */    95,   92,   91,   90,   89,   26,  400,   25,  261,   66,
 /*  1080 */   666,  399,  473,  473,  666,  545,  543,  466,  463,  460,
 /*  1090 */   473,  473,  130,  129,  542,   65,  390,  540,  473,  549,
 /*  1100 */   140,  139,  473,  658,  657,  167,  457,  473,  138,  473,
 /*  1110 */   473,  388,  145,  473,  473,  326,  533,  111,  252,  115,
 /*  1120 */   114,   23,  473,   54,  113,  384,    3,  259,  380,  255,
 /*  1130 */    83,  449,   60,  136,  529,  662,  379,  473,  245,  134,
 /*  1140 */    82,  666,  666,  166,  660,    5,  371,  144,  655,  666,
 /*  1150 */   666,  526,  473,  659,   80,   81,  342,  666,  321,  522,
 /*  1160 */   514,  666,  143,  223,  471,  228,  666,  473,  666,  666,
 /*  1170 */   313,  513,  666,  666,  226,  473,  227,  142,  220,  225,
 /*  1180 */   473,  666,  359,  656,  654,   53,  551,  550,  406,   28,
 /*  1190 */    40,  224,  100,  222,   94,   93,  666,  473,  221,  466,
 /*  1200 */   463,  460,   64,  473,  358,  219,  161,   51,  160,  216,
 /*  1210 */   215,  666,  128,   50,  159,  658,  657,  157,  457,  641,
 /*  1220 */   641,   63,   62,  492,  156,  316,  666,  326,  315,  694,
 /*  1230 */   314,    3,  473,   21,  666,   83,  449,  695,  693,  666,
 /*  1240 */   662,  692,   39,  389,  473,  685,  396,   32,  483,  660,
 /*  1250 */   691,  271,   82,  655,   49,  473,  666,  473,  659,   80,
 /*  1260 */    81,  342,  666,  302,  489,  112,  297,   48,  475,  471,
 /*  1270 */   301,  109,   86,  634,  633,  636,  635,   99,  103,  101,
 /*  1280 */   104,  102,  488,   98,   97,   96,   95,   92,   91,   90,
 /*  1290 */    89,  666,  473,  298,  689,  656,  654,  487,  551,  550,
 /*  1300 */   406,   28,   17,  666,  466,  463,  460,  473,  473,  473,
 /*  1310 */   478,  313,  484,  474,  666,  473,  666,   47,   38,   46,
 /*  1320 */   658,  657,  664,  457,  473,   45,  292,  473,  290,  206,
 /*  1330 */   137,  473,  326,  100,   44,   94,   93,   36,  473,   68,
 /*  1340 */   289,   35,  288,  473,  442,  444,   70,  287,   43,  419,
 /*  1350 */   108,  666,  472,   42,  663,  661,  470,   82,  649,   15,
 /*  1360 */   641,  641,  468,  204,   75,  279,  666,  666,  666,  439,
 /*  1370 */   336,  433,  615,  188,  666,  436,  421,   67,  411,  417,
 /*  1380 */   588,  584,  275,  666,  581,  272,  666,  586,  582,  404,
 /*  1390 */   666,  269,  574,  413,  567,  580,  579,  666,  196,  267,
 /*  1400 */   656,  654,  666,  551,  550,  406,   28,  546,  666,  258,
 /*  1410 */   410,  257,  385,   86,  634,  633,  636,  635,   99,  103,
 /*  1420 */   101,  104,  102,  262,   98,   97,   96,   95,   92,   91,
 /*  1430 */    90,   89,    4,  253,  246,  386,   83,  449,  254,  251,
 /*  1440 */   530,  662,  532,  382,  381,  528,  378,  244,  527,  377,
 /*  1450 */   660,  242,  376,  165,  655,  374,  523,  520,  519,  659,
 /*  1460 */    80,   81,  342,  518,  164,  517,  322,  232,  234,  230,
 /*  1470 */   471,    4,  516,  194,  372,   83,  449,  368,  512,  158,
 /*  1480 */   662,  366,  511,  364,  510,  362,  509,  150,  507,  409,
 /*  1490 */   162,  354,  353,  655,  352,  351,  192,  500,  659,   80,
 /*  1500 */    81,  342,  349,  155,  173,  466,  463,  460,  278,  471,
 /*  1510 */   163,  211,   89,  494,  347,  291,  133, 1024,  293,  499,
 /*  1520 */   273,  658,  657,  270,  457,  476,  280,  408,  562,  268,
 /*  1530 */   536,  535, 1024,  447,  383, 1024, 1024,  561, 1024, 1024,
 /*  1540 */  1024,  213,   12, 1024,  466,  463,  460,  496, 1024, 1024,
 /*  1550 */   350, 1024, 1024, 1024, 1024, 1024, 1024, 1024,   82,  276,
 /*  1560 */   658,  657, 1024,  457, 1024, 1024, 1024,  607, 1024,  292,
 /*  1570 */   432, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024,
 /*  1580 */   448, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024,
 /*  1590 */  1024, 1024, 1024, 1024, 1024, 1024, 1024,   82, 1024, 1024,
 /*  1600 */  1024,  656,  654, 1024, 1024, 1024, 1024,   28,  292, 1024,
 /*  1610 */  1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024,  448,
 /*  1620 */  1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024,
 /*  1630 */     4, 1024, 1024, 1024,   73,  449, 1024, 1024, 1024,  662,
 /*  1640 */   656,  654, 1024, 1024, 1024, 1024,   28, 1024,  660, 1024,
 /*  1650 */  1024, 1024,  655, 1024, 1024, 1024, 1024,  659,   80,   81,
 /*  1660 */   342, 1024, 1024, 1024, 1024, 1024, 1024, 1024,  471, 1024,
 /*  1670 */  1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024,
 /*  1680 */  1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024,
 /*  1690 */  1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024,
 /*  1700 */  1024, 1024, 1024,  466,  463,  460, 1024, 1024, 1024, 1024,
 /*  1710 */  1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024,  658,
 /*  1720 */   657, 1024,  457, 1024, 1024, 1024, 1024, 1024, 1024, 1024,
 /*  1730 */  1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024,
 /*  1740 */  1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024,
 /*  1750 */  1024, 1024, 1024, 1024, 1024, 1024,   82, 1024, 1024, 1024,
 /*  1760 */  1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024,
 /*  1770 */  1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024,
 /*  1780 */  1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024,
 /*  1790 */  1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024,  656,
 /*  1800 */   654, 1024, 1024, 1024, 1024,   28,
};
const SQLParser_YYCODETYPE SQLParser::yy_lookahead[] = {
 /*     0 */    14,   10,   16,   28,   11,   14,   15,    1,  131,   16,
 /*    10 */    19,   11,   37,   38,   39,   40,   16,   40,   28,   28,
 /*    20 */    10,  144,   36,   32,   38,   39,  200,   37,   37,   38,
 /*    30 */    39,   40,    0,    1,    2,   38,   39,   14,  161,   48,
 /*    40 */   155,  156,  157,  194,  195,   10,  197,  198,    9,   63,
 /*    50 */    64,  162,  163,  164,  165,   69,  167,  168,   11,   36,
 /*    60 */    21,   38,   39,   86,   87,   88,  217,   90,   91,   92,
 /*    70 */    93,   94,   95,   28,   83,   84,   85,   32,  229,   19,
 /*    80 */   103,  104,  256,  257,  258,  259,   63,   64,  239,   14,
 /*    90 */    99,  100,   17,  102,   19,   20,  279,  280,  281,  113,
 /*   100 */    11,  115,  116,  117,  118,  119,  120,  121,  122,  123,
 /*   110 */   124,  125,   74,  127,  128,  129,  130,  131,  132,  133,
 /*   120 */   134,   11,  131,   63,   64,   16,   16,  136,  131,  132,
 /*   130 */   133,  134,  144,   16,  218,  219,  113,  221,  115,  116,
 /*   140 */   117,  118,  119,  120,  121,  122,  123,  124,  125,  161,
 /*   150 */   127,  128,  129,  130,  131,  132,  133,  134,   14,   38,
 /*   160 */    39,  151,  162,  163,  164,  165,   28,  167,  168,  169,
 /*   170 */   179,  180,  200,   25,   11,   37,  185,  117,  118,  231,
 /*   180 */    36,   28,   38,   39,  200,  147,  182,  183,   44,  241,
 /*   190 */    37,   38,   39,   10,  210,   14,  158,   53,   27,  251,
 /*   200 */    28,   20,  155,  156,  157,  182,  183,   63,   64,   37,
 /*   210 */   262,  263,   28,  175,  176,  231,  178,   36,  162,   38,
 /*   220 */    39,   40,  166,   40,    4,  241,    6,    7,    8,  257,
 /*   230 */   258,  259,   12,   22,   23,  251,  200,   26,  162,   11,
 /*   240 */    38,   39,  166,  259,   63,   64,  210,   11,  127,  128,
 /*   250 */   129,  130,  131,  132,  133,  134,   11,  113,  149,  115,
 /*   260 */   116,  117,  118,  119,  120,  121,  122,  123,  124,  125,
 /*   270 */    16,  127,  128,  129,  130,  131,  132,  133,  134,  162,
 /*   280 */   163,  164,  165,  200,  167,  168,  169,  162,  252,  144,
 /*   290 */    70,  166,  147,  210,  113,  259,  115,  116,  117,  118,
 /*   300 */   119,  120,  121,  122,  123,  124,  125,   29,  127,  128,
 /*   310 */   129,  130,  131,  132,  133,  134,   14,  162,  155,  156,
 /*   320 */   157,  166,   20,   19,  122,  123,  124,  125,  126,  127,
 /*   330 */   128,  129,  130,  131,  132,  133,  134,  200,   36,  200,
 /*   340 */    38,   39,  259,  200,   40,  202,  207,  210,  162,  200,
 /*   350 */   207,  268,  166,   14,   38,   39,  186,  137,  188,  210,
 /*   360 */   140,  222,  223,  143,   10,   63,   64,  200,  148,  162,
 /*   370 */   233,  137,  152,  166,   20,   36,   11,   38,   39,  159,
 /*   380 */   231,   16,  233,  155,  156,  157,   40,  153,  154,  252,
 /*   390 */   241,  155,  156,  157,   40,  228,  259,  182,  183,   26,
 /*   400 */   251,  252,   63,   64,  131,  132,  133,  134,  259,   11,
 /*   410 */   145,  107,  108,  109,   16,  113,  151,  115,  116,  117,
 /*   420 */   118,  119,  120,  121,  122,  123,  124,  125,  174,  127,
 /*   430 */   128,  129,  130,  131,  132,  133,  134,   11,  122,  123,
 /*   440 */   124,  125,   16,  127,  128,  129,  130,  131,  132,  133,
 /*   450 */   134,   30,  113,  105,  115,  116,  117,  118,  119,  120,
 /*   460 */   121,  122,  123,  124,  125,   25,  127,  128,  129,  130,
 /*   470 */   131,  132,  133,  134,   14,   10,  200,  131,  202,   14,
 /*   480 */    15,  231,  200,  207,   19,  200,   10,   22,  253,  254,
 /*   490 */   255,  241,  210,   28,   36,  210,   36,   32,   38,   39,
 /*   500 */    10,  251,   37,   38,   39,   40,   28,  200,   11,   11,
 /*   510 */    10,   14,  235,   48,   16,  233,   58,  210,  144,   19,
 /*   520 */    11,  147,  272,   63,   64,   16,  187,   59,   28,  181,
 /*   530 */    40,  244,   32,   36,  252,   38,   39,   37,   11,   39,
 /*   540 */    40,  259,   74,   16,  259,  200,   11,  260,   83,   84,
 /*   550 */    85,   16,  261,  268,   20,  210,  279,  280,  281,  252,
 /*   560 */    63,   64,  235,   11,   99,  100,  259,  102,  262,  263,
 /*   570 */   279,  280,  281,  113,   40,  115,  116,  117,  118,  119,
 /*   580 */   120,  121,  122,  123,  124,  125,   44,  127,  128,  129,
 /*   590 */   130,  131,  132,  133,  134,   53,   28,  252,   22,   99,
 /*   600 */   100,  136,  218,  219,  259,  221,  279,  280,  281,   10,
 /*   610 */   113,  208,  115,  116,  117,  118,  119,  120,  121,  122,
 /*   620 */   123,  124,  125,  220,  127,  128,  129,  130,  131,  132,
 /*   630 */   133,  134,   11,   51,  200,   14,  200,  190,  191,  192,
 /*   640 */   193,  200,   36,  200,  179,  180,  210,  187,  200,  200,
 /*   650 */   185,  210,  218,  219,  211,  200,  231,   36,  231,   38,
 /*   660 */    39,  200,   40,   81,  216,  210,  241,  200,  241,   11,
 /*   670 */   208,   49,   14,  224,  233,  200,  251,  200,  251,  179,
 /*   680 */    10,   11,  220,  101,   63,   64,  110,   10,  211,   19,
 /*   690 */    10,  200,  208,  252,   36,  259,   38,   39,   28,  224,
 /*   700 */   259,  200,   32,  231,  220,  200,  200,   37,   40,   39,
 /*   710 */    40,  192,  193,  241,  259,  210,  210,   40,  282,  228,
 /*   720 */   138,   63,   64,  251,  142,  258,  259,   11,  267,  200,
 /*   730 */     1,    2,  150,  278,  113,  151,  115,  116,  117,  118,
 /*   740 */   119,  120,  121,  122,  123,  124,  125,  208,  127,  128,
 /*   750 */   129,  130,  131,  132,  133,  134,  151,  200,  200,  220,
 /*   760 */   236,  200,  238,  200,  259,  259,  237,  210,  210,   99,
 /*   770 */   100,  113,  271,  115,  116,  117,  118,  119,  120,  121,
 /*   780 */   122,  123,  124,  125,  278,  127,  128,  129,  130,  131,
 /*   790 */   132,  133,  134,   11,  200,  200,   14,   10,  237,  213,
 /*   800 */   200,   14,   15,  200,  210,  210,   19,   11,   10,  200,
 /*   810 */   210,  147,  200,   16,  211,   28,  259,  259,   36,   32,
 /*   820 */    38,   39,  158,  200,   37,   38,   39,   40,  233,  200,
 /*   830 */   267,  200,  200,   14,  200,   48,    9,  228,   10,  210,
 /*   840 */   228,  210,  210,   11,  210,   63,   64,  252,   11,  179,
 /*   850 */    17,  228,   16,  259,  259,   36,   10,   38,   39,  259,
 /*   860 */   274,  213,  233,  213,   16,  233,  200,  200,  213,  200,
 /*   870 */    83,   84,   85,   40,   11,   10,  210,  210,   51,  210,
 /*   880 */    16,  252,   63,   64,  252,   11,   99,  100,  259,  102,
 /*   890 */   259,  259,  144,  259,   10,  113,   16,  115,  116,  117,
 /*   900 */   118,  119,  120,  121,  122,  123,  124,  125,   81,  127,
 /*   910 */   128,  129,  130,  131,  132,  133,  134,   11,   10,    7,
 /*   920 */    16,  200,  274,  136,  274,  259,  259,   10,  259,  274,
 /*   930 */    11,  210,  113,   10,  115,  116,  117,  118,  119,  120,
 /*   940 */   121,  122,  123,  124,  125,   25,  127,  128,  129,  130,
 /*   950 */   131,  132,  133,  134,   14,   16,   25,   10,  200,   10,
 /*   960 */    28,   16,   11,   10,   16,  138,  179,  180,  210,  142,
 /*   970 */    32,  200,  185,   11,  200,  200,   36,  150,   38,   39,
 /*   980 */   259,  210,  162,   10,  210,  210,  200,   11,  200,  160,
 /*   990 */   151,  200,  200,  162,   10,  200,  210,  162,  210,  278,
 /*  1000 */   162,  210,  210,   63,   64,  210,  162,  233,  233,  162,
 /*  1010 */   151,  162,  162,  162,   10,  162,   11,  259,   14,   15,
 /*  1020 */   151,  200,  151,   19,   11,  200,  252,  252,   10,  171,
 /*  1030 */   259,  210,   28,  259,  259,  210,   32,   11,   16,   11,
 /*  1040 */   115,   37,   38,   39,   40,  259,   76,  259,  115,  278,
 /*  1050 */   259,  259,   48,  113,  259,  115,  116,  117,  118,  119,
 /*  1060 */   120,  121,  122,  123,  124,  125,  278,  127,  128,  129,
 /*  1070 */   130,  131,  132,  133,  134,   25,   10,   25,   11,   36,
 /*  1080 */   259,  170,  200,  200,  259,   34,   18,   83,   84,   85,
 /*  1090 */   200,  200,  210,  210,   19,   10,   18,   21,  200,  278,
 /*  1100 */   210,  210,  200,   99,  100,   10,  102,  200,  210,  200,
 /*  1110 */   200,   14,  210,  200,  200,  111,   15,  210,   81,  210,
 /*  1120 */   210,  117,  200,  210,  210,   11,   10,    9,  139,   33,
 /*  1130 */    14,   15,  210,   10,   32,   19,   25,  200,  145,   20,
 /*  1140 */   136,  259,  259,   10,   28,   10,   36,  210,   32,  259,
 /*  1150 */   259,   11,  200,   37,   38,   39,   40,  259,  141,   15,
 /*  1160 */    32,  259,  210,  149,   48,  145,  259,  200,  259,  259,
 /*  1170 */    14,   32,  259,  259,  145,  200,  146,  210,    9,  146,
 /*  1180 */   200,  259,   24,  179,  180,  210,  182,  183,  184,  185,
 /*  1190 */   210,  145,   36,  145,   38,   39,  259,  200,  149,   83,
 /*  1200 */    84,   85,   10,  200,   58,   16,   49,  210,  146,  151,
 /*  1210 */   151,  259,   36,  210,  149,   99,  100,  140,  102,   63,
 /*  1220 */    64,   36,   36,    3,  177,  209,  259,  111,  209,    5,
 /*  1230 */   209,   10,  200,  117,  259,   14,   15,  196,  196,  259,
 /*  1240 */    19,  196,  210,   13,  200,   40,   33,   16,  212,   28,
 /*  1250 */   196,  151,  136,   32,  210,  200,  259,  200,   37,   38,
 /*  1260 */    39,   40,  259,  199,  201,  210,  205,  210,   35,   48,
 /*  1270 */   200,  115,  116,  117,  118,  119,  120,  121,  122,  123,
 /*  1280 */   124,  125,  203,  127,  128,  129,  130,  131,  132,  133,
 /*  1290 */   134,  259,  200,  204,  206,  179,  180,   24,  182,  183,
 /*  1300 */   184,  185,  210,  259,   83,   84,   85,  200,  200,  200,
 /*  1310 */    31,   14,  200,  200,  259,  200,  259,  210,  210,  210,
 /*  1320 */    99,  100,  241,  102,  200,  210,  147,  200,  246,  239,
 /*  1330 */   159,  200,  111,   36,  210,   38,   39,  210,  200,  174,
 /*  1340 */   247,  210,  248,  200,  171,  170,  172,  249,  210,  200,
 /*  1350 */   173,  259,  200,  210,  250,  200,  220,  136,   40,  210,
 /*  1360 */    63,   64,  220,  283,  186,  214,  259,  259,  259,   31,
 /*  1370 */    16,  106,  269,  201,  259,  215,   33,  145,  181,   40,
 /*  1380 */   200,  200,  265,  259,  200,  265,  259,  266,  266,   24,
 /*  1390 */   259,  265,  255,  200,  200,  266,  266,  259,  200,  265,
 /*  1400 */   179,  180,  259,  182,  183,  184,  185,  275,  259,  199,
 /*  1410 */   249,  200,  203,  116,  117,  118,  119,  120,  121,  122,
 /*  1420 */   123,  124,  125,  276,  127,  128,  129,  130,  131,  132,
 /*  1430 */   133,  134,   10,  205,  199,  201,   14,   15,  200,  200,
 /*  1440 */   200,   19,  206,  201,  200,  200,  200,  200,  232,  201,
 /*  1450 */    28,   33,  200,  227,   32,   13,  201,  200,  200,   37,
 /*  1460 */    38,   39,   40,  200,  227,  201,  200,  200,  227,  200,
 /*  1470 */    48,   10,  201,  154,  200,   14,   15,  200,  200,  225,
 /*  1480 */    19,  200,  200,  200,  200,  200,  200,  200,  238,   28,
 /*  1490 */   200,  200,  200,   32,  200,  239,  113,  246,   37,   38,
 /*  1500 */    39,   40,  200,   10,  243,   83,   84,   85,  200,   48,
 /*  1510 */   200,  239,  134,  225,  239,  245,  273,  285,  242,  226,
 /*  1520 */   261,   99,  100,  261,  102,  213,  213,  213,  275,  261,
 /*  1530 */   235,  235,  285,  284,  230,  285,  285,  277,  285,  285,
 /*  1540 */   285,  261,  243,  285,   83,   84,   85,  246,  285,  285,
 /*  1550 */   261,  285,  285,  285,  285,  285,  285,  285,  136,  261,
 /*  1560 */    99,  100,  285,  102,  285,  285,  285,  264,  285,  147,
 /*  1570 */   270,  285,  285,  285,  285,  285,  285,  285,  285,  285,
 /*  1580 */   158,  285,  285,  285,  285,  285,  285,  285,  285,  285,
 /*  1590 */   285,  285,  285,  285,  285,  285,  285,  136,  285,  285,
 /*  1600 */   285,  179,  180,  285,  285,  285,  285,  185,  147,  285,
 /*  1610 */   285,  285,  285,  285,  285,  285,  285,  285,  285,  158,
 /*  1620 */   285,  285,  285,  285,  285,  285,  285,  285,  285,  285,
 /*  1630 */    10,  285,  285,  285,   14,   15,  285,  285,  285,   19,
 /*  1640 */   179,  180,  285,  285,  285,  285,  185,  285,   28,  285,
 /*  1650 */   285,  285,   32,  285,  285,  285,  285,   37,   38,   39,
 /*  1660 */    40,  285,  285,  285,  285,  285,  285,  285,   48,  285,
 /*  1670 */   285,  285,  285,  285,  285,  285,  285,  285,  285,  285,
 /*  1680 */   285,  285,  285,  285,  285,  285,  285,  285,  285,  285,
 /*  1690 */   285,  285,  285,  285,  285,  285,  285,  285,  285,  285,
 /*  1700 */   285,  285,  285,   83,   84,   85,  285,  285,  285,  285,
 /*  1710 */   285,  285,  285,  285,  285,  285,  285,  285,  285,   99,
 /*  1720 */   100,  285,  102,  285,  285,  285,  285,  285,  285,  285,
 /*  1730 */   285,  285,  285,  285,  285,  285,  285,  285,  285,  285,
 /*  1740 */   285,  285,  285,  285,  285,  285,  285,  285,  285,  285,
 /*  1750 */   285,  285,  285,  285,  285,  285,  136,  285,  285,  285,
 /*  1760 */   285,  285,  285,  285,  285,  285,  285,  285,  285,  285,
 /*  1770 */   285,  285,  285,  285,  285,  285,  285,  285,  285,  285,
 /*  1780 */   285,  285,  285,  285,  285,  285,  285,  285,  285,  285,
 /*  1790 */   285,  285,  285,  285,  285,  285,  285,  285,  285,  179,
 /*  1800 */   180,  285,  285,  285,  285,  185,
};
const short SQLParser::yy_shift_ofst[] = {
 /*     0 */   729, 1422,  220, 1461, 1422,  787,  787,  787,  787,  787,
 /*    10 */   787,  787,  787,  500,  664,  181,  144,  144, 1116, 1004,
 /*    20 */  1221, 1221, 1221, 1221,  465,  787,  787,  787,  787,  787,
 /*    30 */   500,   38,  833,   23,  -14,  782,  658,  621,  497,  460,
 /*    40 */   339,  302,  819,  819,  819,  819,  819,  819,  819,  819,
 /*    50 */   819,  819,  819,  819,  940,  819,  819,  819, 1156, 1297,
 /*    60 */  1297,   -9,  787,  787,  787,  787,  787,  787,  787,  787,
 /*    70 */   787,  787,  787,  787,  787,  787,  787,  787,  787,  787,
 /*    80 */   787,  787,  787,  787,  787,  787, 1620,  787,  787,  787,
 /*    90 */   787,  787,  787,  787,  787,  787,  787,  787,  787,  787,
 /*   100 */   787,  787,  787,  787,  787,  787,  787,  787,  787,  787,
 /*   110 */   787,  202,  316,  316,  316,  316,  316,  316,  670,  500,
 /*   120 */   121,  121,  121,  121,   -3,   -3,   -3,   -3,  -25,  273,
 /*   130 */   273,  153,  153,  664,  664,  664, 1205, 1339, 1378, 1378,
 /*   140 */  1378, 1205, -124, -124, -124, -124,  -23,  -23,  -23,  -23,
 /*   150 */   234,   32,  677,  677,  677, 1205, 1205, 1205, 1205, 1205,
 /*   160 */  1205, 1205, 1318, 1318, 1205, 1205, 1205, 1205, 1318, 1205,
 /*   170 */  1318, 1205, -124, -124,  -23,  -23,  -23,    0,  117,  582,
 /*   180 */   304,  236,  228,  163,   47, -115, -115, -115,  354, -123,
 /*   190 */   254,  534,  468,  534,  622,  542,  542,  576,  348,  346,
 /*   200 */   534,  534,  534,  490,  170,  109,  -12, 1383, 1493, 1171,
 /*   210 */  1205, 1383, 1171, 1165, 1171, 1205, 1205, 1205, 1205, 1319,
 /*   220 */  1205, 1205, 1205, 1205, 1205, 1205, 1205, 1205, 1205, 1205,
 /*   230 */  1100, 1205, 1100, 1205, 1205, 1442, 1205, 1205, 1205, 1442,
 /*   240 */  1100, 1442, 1205, 1418, 1100, 1205, 1205, 1230, 1205, 1205,
 /*   250 */  1205, 1100, 1205, 1273, 1233, 1205, 1231, 1100, 1205, 1230,
 /*   260 */  1205, 1197, 1175, 1365, 1205, 1205, 1339, 1343, 1232, 1343,
 /*   270 */  1232, 1205, 1343, 1232, 1205, 1343, 1232, 1205, 1100, 1265,
 /*   280 */  1354, 1338, 1178, 1318, 1318, 1205, 1205, 1177, 1175, 1174,
 /*   290 */  1173, 1165, 1171, 1179, 1205, 1279, 1205, 1273, 1233, 1213,
 /*   300 */  1231, 1100, 1205, 1230, 1224, 1224, 1224, 1224, -124, -124,
 /*   310 */  -124,  827, -111,   60,   75,   75,   75,  211,  535,  374,
 /*   320 */   145,  458,  265,  527,  509,  398,  215,    4,  172,  498,
 /*   330 */   207,  186,  155,  125,   76,   56,   45,  426,  365,  138,
 /*   340 */   -10,  183,   10,  110,   -7,   39, 1220, 1047, 1186, 1185,
 /*   350 */  1077, 1065, 1176, 1059, 1058, 1062, 1157, 1189, 1192, 1146,
 /*   360 */  1158, 1169, 1049, 1048, 1014, 1046, 1033, 1029, 1030, 1020,
 /*   370 */  1139, 1128, 1110, 1017, 1144, 1140, 1135, 1133,  993, 1102,
 /*   380 */  1111,  989, 1119, 1037, 1096, 1114, 1123, 1118, 1101, 1097,
 /*   390 */  1095, 1078, 1076, 1085, 1075, 1068, 1051, 1043, 1067, 1052,
 /*   400 */   911, 1066,  858,  904, 1050,  933,  970,  925, 1028, 1022,
 /*   410 */  1026, 1018, 1013,  871,  869, 1005,  859,  984,  829,  839,
 /*   420 */   976,  973,  853,  851,  850,  849,  847,  844,  838,  835,
 /*   430 */   831,  820,  962,  953,  938,  948,  951,  945,  932,  949,
 /*   440 */   947,  904,  931,  939,  920,  919,  904,  912,  923,  917,
 /*   450 */   906,  908,  880,  748,  884,  874,  864,  865,  863,  848,
 /*   460 */   846,  837,  836,  828,  832,  797,  798,  796,  668,  716,
 /*   470 */   668,  680,  605,  584,  606,  599,  552,  568,  476,  478,
 /*   480 */   421,  373,  440,  278,  245,  184,  171,  148,   89,   35,
 /*   490 */     6,
};
const short SQLParser::yy_reduce_ofst[] = {
 /*     0 */   447,  149, -151,  -16,  -16,  775,  774,  632,  629,  595,
 /*    10 */   441,  282,  137, -174,  -52,  291,  327,  277,  821,  788,
 /*    20 */   771,  721,  506,  455,  345,  285,  307,   83,  436,   36,
 /*    30 */   -28,  250,  139, -183, -183, -183, -183, -183, -183, -183,
 /*    40 */  -183, -183, -183, -183, -183, -183, -183, -183, -183, -183,
 /*    50 */  -183, -183, -183, -183, -183, -183, -183, -183, -183, -183,
 /*    60 */  -183, 1149, 1143, 1138, 1131, 1127, 1124, 1115, 1109, 1108,
 /*    70 */  1107, 1092, 1057, 1055, 1044, 1032, 1003,  997,  980,  975,
 /*    80 */   967,  952,  937,  922,  914,  913,  910,  909,  907,  902,
 /*    90 */   898,  891,  890,  883,  882,  825,  795,  792,  791,  786,
 /*   100 */   758,  669,  667,  666,  634,  631,  600,  594,  558,  557,
 /*   110 */   505, -183, -183, -183, -183, -183, -183, -183,  467,  467,
 /*   120 */  -183, -183, -183, -183, -183, -183, -183, -183,  434, -183,
 /*   130 */  -183,  384,  -84,  472,  427,  425,  276,  235, -183, -183,
 /*   140 */  -183,  143, -183, -183, -183, -183,  655,  650,  648,  586,
 /*   150 */   524,  519,  603,  477,  443,  563,  623,  501,  612,  609,
 /*   160 */   561,  529,  539,  484,  491,  167,  475,  449,  462,  461,
 /*   170 */   403,  448,  306,  287, 1314, 1313, 1312, 1303, 1303, 1304,
 /*   180 */  1300, 1276, 1276, 1276, 1276, 1276, 1276, 1276, 1298, 1299,
 /*   190 */  1301, 1289, 1293, 1280, 1310, 1296, 1295, 1260, 1253, 1152,
 /*   200 */  1268, 1262, 1259, 1308, 1249, 1270, 1261, 1288, 1243, 1275,
 /*   210 */  1302, 1254, 1272, 1251, 1256, 1294, 1292, 1291, 1290, 1250,
 /*   220 */  1287, 1286, 1285, 1284, 1283, 1282, 1281, 1278, 1277, 1274,
 /*   230 */  1271, 1269, 1264, 1267, 1266, 1241, 1263, 1258, 1257, 1237,
 /*   240 */  1255, 1226, 1252, 1216, 1248, 1247, 1246, 1235, 1245, 1244,
 /*   250 */  1240, 1242, 1239, 1236, 1228, 1238, 1209, 1234, 1211, 1210,
 /*   260 */  1198, 1132, 1161, 1147, 1194, 1193, 1137, 1130, 1134, 1129,
 /*   270 */  1126, 1184, 1122, 1120, 1181, 1121, 1117, 1180, 1172, 1103,
 /*   280 */  1160, 1151, 1080, 1142, 1136, 1155, 1152, 1104, 1098, 1094,
 /*   290 */  1093, 1082, 1090, 1081, 1113, 1036, 1112, 1088, 1061, 1089,
 /*   300 */  1079, 1063, 1070, 1064, 1054, 1045, 1042, 1041, 1021, 1019,
 /*   310 */  1016,
};
const SQLParser_YYACTIONTYPE SQLParser::yy_default[] = {
 /*     0 */   705, 1019,  825, 1022, 1022, 1019, 1019, 1019, 1019, 1019,
 /*    10 */  1019, 1019, 1019,  832,  856,  852,  798,  798, 1022, 1022,
 /*    20 */  1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1017, 1022,
 /*    30 */  1022, 1022, 1022, 1022,  903, 1022, 1022, 1022, 1022, 1022,
 /*    40 */  1022, 1022,  911,  910,  746,  882,  907,  901,  905, 1013,
 /*    50 */  1014, 1012, 1016, 1020, 1022, 1021,  904,  745,  972,  971,
 /*    60 */   998, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022,
 /*    70 */  1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022,
 /*    80 */  1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022,
 /*    90 */  1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022,
 /*   100 */  1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022,
 /*   110 */  1022,  991,  997, 1004,  996,  992,  978,  977, 1022,  831,
 /*   120 */   973,  976,  975,  974,  982,  981,  980,  979, 1022,  984,
 /*   130 */   983, 1022, 1022, 1022, 1022, 1022, 1022,  827,  987,  986,
 /*   140 */   985, 1022, 1001, 1000,  999,  988, 1022, 1022, 1022, 1022,
 /*   150 */  1022,  705, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022,
 /*   160 */  1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022,
 /*   170 */  1022, 1022,  856,  846, 1022, 1022, 1022, 1022,  854,  717,
 /*   180 */  1022, 1022, 1022, 1022, 1022,  912,  813,  774,  852,  844,
 /*   190 */   906,  852, 1022,  852, 1022,  798,  798,  956,  952, 1022,
 /*   200 */   852,  852,  852, 1022, 1015,  853,  844,  766,  915,  825,
 /*   210 */  1022,  766,  825,  906,  825, 1022, 1022, 1022, 1022, 1022,
 /*   220 */  1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022,
 /*   230 */   861, 1022,  861, 1022, 1022,  772, 1022, 1022, 1022,  772,
 /*   240 */   861,  772, 1022,  792,  861, 1022, 1022,  718, 1022, 1022,
 /*   250 */  1022,  861, 1022,  728,  743, 1022,  762,  861, 1022,  718,
 /*   260 */  1022,  952,  886,  954, 1022, 1022,  826,  885,  883,  885,
 /*   270 */   883, 1022,  885,  883, 1022,  885,  883, 1022,  861,  893,
 /*   280 */   735, 1022, 1022,  756,  754, 1022, 1022,  902,  886,  900,
 /*   290 */   890,  906,  825, 1022, 1022, 1022, 1022,  728,  743,  739,
 /*   300 */   762,  861, 1022,  718,  710,  710,  710,  710,  723,  723,
 /*   310 */   723, 1022, 1022, 1022,  809,  808,  722, 1022, 1022, 1022,
 /*   320 */  1022, 1022,  801, 1022, 1022, 1022, 1022, 1022, 1022, 1022,
 /*   330 */  1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022,
 /*   340 */  1022,  753,  922, 1022, 1022, 1022,  706, 1022, 1022, 1022,
 /*   350 */  1022, 1022, 1022, 1022, 1022, 1022, 1022,  803, 1022, 1022,
 /*   360 */  1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022,
 /*   370 */  1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022,
 /*   380 */  1022,  781, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022,
 /*   390 */  1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022,
 /*   400 */  1022, 1022, 1022,  955, 1022, 1022, 1022, 1022, 1022,  925,
 /*   410 */  1022, 1022, 1022,  840, 1022, 1022,  839, 1022, 1022, 1022,
 /*   420 */  1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022,
 /*   430 */  1022, 1022, 1022, 1022, 1022,  736, 1022, 1022, 1022, 1022,
 /*   440 */  1022,  891, 1022,  887, 1022, 1022, 1018, 1022, 1022, 1022,
 /*   450 */  1022, 1022,  821,  816, 1022, 1022, 1022, 1022, 1022, 1022,
 /*   460 */  1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022,  757, 1022,
 /*   470 */   755, 1022,  923, 1022, 1022, 1022, 1022, 1022, 1022, 1022,
 /*   480 */  1022, 1022, 1022,  730, 1022, 1022, 1022, 1022, 1022, 1022,
 /*   490 */  1022,  702,  707,  914,  913,  916,  909,  769,  768,  767,
 /*   500 */   908,  812,  811,  810,  806,  805,  804,  807,  802,  790,
 /*   510 */   789,  788,  787,  783,  782,  773,  800,  799,  786,  784,
 /*   520 */   779,  777,  771,  863,  770,  747,  793,  791,  785,  780,
 /*   530 */   778,  776,  748,  719,  720,  795,  794,  765,  764,  763,
 /*   540 */   727,  726,  725,  724,  721,  740,  951,  970,  960,  958,
 /*   550 */   969,  968,  965,  964,  963,  962,  961,  959,  957,  967,
 /*   560 */   966,  953,  950,  920, 1008,  829,  834,  841,  838,  837,
 /*   570 */   836,  835,  833,  830,  828,  824,  849,  848,  847,  860,
 /*   580 */   859,  862,  858,  918,  917,  884,  857,  851,  850,  881,
 /*   590 */   880,  879,  878,  877,  876,  875,  874,  873,  872,  871,
 /*   600 */   870,  869,  868,  867,  866,  865,  864,  855,  845,  899,
 /*   610 */   898,  897,  896,  895,  894,  892,  737,  738,  734,  889,
 /*   620 */   888,  797,  796,  937, 1007, 1011,  822, 1010,  823, 1009,
 /*   630 */   819,  818,  817, 1005, 1002,  994,  993, 1006, 1003,  995,
 /*   640 */   990,  989,  936,  935,  934,  933,  932,  761,  760,  758,
 /*   650 */   759,  751,  750,  749,  931,  930,  929,  928,  927,  926,
 /*   660 */   925,  924,  921,  820,  815,  814,  919,  843,  842,  744,
 /*   670 */   949,  948,  947,  946,  945,  944,  943,  942,  941,  940,
 /*   680 */   939,  938,  733,  732,  731,  752,  742,  741,  729,  716,
 /*   690 */   715,  714,  713,  712,  711,  709,  708,  704,  703,  701,
};

#ifdef SQLParser_YYFALLBACK
	const SQLParser_YYCODETYPE SQLParser::yyFallback[] = {
    0,  /*          $ => nothing */
    0,  /*       SEMI => nothing */
   40,  /*    EXPLAIN => ID */
   40,  /*    ANALYZE => ID */
   40,  /*      BEGIN => ID */
    0,  /* TRANSACTION => nothing */
    0,  /*     COMMIT => nothing */
   40,  /*        END => ID */
   40,  /*   ROLLBACK => ID */
    0,  /*      TABLE => nothing */
    0,  /*         LP => nothing */
    0,  /*         RP => nothing */
    0,  /*     CREATE => nothing */
    0,  /*         IF => nothing */
    0,  /*        NOT => nothing */
    0,  /*     EXISTS => nothing */
    0,  /*      COMMA => nothing */
    0,  /*    PRIMARY => nothing */
   40,  /*        KEY => ID */
    0,  /*       NULL => nothing */
    0,  /*         AS => nothing */
   40,  /*    VIRTUAL => ID */
   40,  /*      RANGE => ID */
   40,  /*   INTERVAL => ID */
   40,  /*  PARTITION => ID */
   40,  /*         BY => ID */
   40,  /*       HASH => ID */
   40,  /* PARTITIONS => ID */
    0,  /*    INTEGER => nothing */
   40,  /* SUBPARTITION => ID */
   40,  /* SUBPARTITIONS => ID */
   40,  /*      EVERY => ID */
    0,  /*     STRING => nothing */
    0,  /*      USING => nothing */
   40,  /* TIMESERIES => ID */
   40,  /*       WITH => ID */
    0,  /*         EQ => nothing */
    0,  /*      FLOAT => nothing */
    0,  /*       PLUS => nothing */
    0,  /*      MINUS => nothing */
    0,  /*         ID => nothing */
   40,  /*      ABORT => ID */
   40,  /*     ACTION => ID */
   40,  /*      AFTER => ID */
   40,  /*        ASC => ID */
   40,  /*     ATTACH => ID */
   40,  /*     BEFORE => ID */
   40,  /*    CASCADE => ID */
   40,  /*       CAST => ID */
   40,  /*   COLUMNKW => ID */
   40,  /*   CONFLICT => ID */
   40,  /*   DATABASE => ID */
   40,  /*   DEFERRED => ID */
   40,  /*       DESC => ID */
   40,  /*     DETACH => ID */
   40,  /*       EACH => ID */
   40,  /*  EXCLUSIVE => ID */
   40,  /*       FAIL => ID */
   40,  /*        FOR => ID */
   40,  /*     IGNORE => ID */
   40,  /*  IMMEDIATE => ID */
   40,  /*  INITIALLY => ID */
   40,  /*    INSTEAD => ID */
   40,  /*    LIKE_KW => ID */
   40,  /*      MATCH => ID */
   40,  /*         NO => ID */
   40,  /*       PLAN => ID */
   40,  /*      QUERY => ID */
   40,  /*         OF => ID */
   40,  /*     OFFSET => ID */
   40,  /*     PRAGMA => ID */
   40,  /*      RAISE => ID */
   40,  /*  RECURSIVE => ID */
   40,  /*    RELEASE => ID */
   40,  /*    REPLACE => ID */
   40,  /*   RESTRICT => ID */
   40,  /*        ROW => ID */
   40,  /*  SAVEPOINT => ID */
   40,  /*       TEMP => ID */
   40,  /*    TRIGGER => ID */
   40,  /*     VACUUM => ID */
   40,  /*       VIEW => ID */
   40,  /*    WITHOUT => ID */
   40,  /*    EXTRACT => ID */
   40,  /* TIMESTAMPADD => ID */
   40,  /* TIMESTAMPDIFF => ID */
   40,  /*       YEAR => ID */
   40,  /*      MONTH => ID */
   40,  /*        DAY => ID */
   40,  /*       WEEK => ID */
   40,  /*       HOUR => ID */
   40,  /*     MINUTE => ID */
   40,  /*     SECOND => ID */
   40,  /* MILLISECOND => ID */
   40,  /* MICROSECOND => ID */
   40,  /* NANOSECOND => ID */
   40,  /*       GLOB => ID */
   40,  /*       LIKE => ID */
   40,  /*     REGEXP => ID */
   40,  /*       TRUE => ID */
   40,  /*      FALSE => ID */
   40,  /*      FORCE => ID */
   40,  /* TIMESTAMP_TRUNC => ID */
   40,  /* DAY_OF_WEEK => ID */
   40,  /* DAY_OF_YEAR => ID */
   40,  /*     WITHIN => ID */
   40,  /*       FILL => ID */
   40,  /*       NONE => ID */
   40,  /*   PREVIOUS => ID */
   40,  /*     LINEAR => ID */
   40,  /*       ROWS => ID */
   40,  /*  UNBOUNDED => ID */
	};
#endif /* SQLParser_YYFALLBACK */

#ifndef NDEBUG
	/* For tracing shifts, the names of all terminals and nonterminals
	 ** are required.  The following table supplies these names */
	const char *const SQLParser::yyTokenName[] = {
  "$",             "SEMI",          "EXPLAIN",       "ANALYZE",     
  "BEGIN",         "TRANSACTION",   "COMMIT",        "END",         
  "ROLLBACK",      "TABLE",         "LP",            "RP",          
  "CREATE",        "IF",            "NOT",           "EXISTS",      
  "COMMA",         "PRIMARY",       "KEY",           "NULL",        
  "AS",            "VIRTUAL",       "RANGE",         "INTERVAL",    
  "PARTITION",     "BY",            "HASH",          "PARTITIONS",  
  "INTEGER",       "SUBPARTITION",  "SUBPARTITIONS",  "EVERY",       
  "STRING",        "USING",         "TIMESERIES",    "WITH",        
  "EQ",            "FLOAT",         "PLUS",          "MINUS",       
  "ID",            "ABORT",         "ACTION",        "AFTER",       
  "ASC",           "ATTACH",        "BEFORE",        "CASCADE",     
  "CAST",          "COLUMNKW",      "CONFLICT",      "DATABASE",    
  "DEFERRED",      "DESC",          "DETACH",        "EACH",        
  "EXCLUSIVE",     "FAIL",          "FOR",           "IGNORE",      
  "IMMEDIATE",     "INITIALLY",     "INSTEAD",       "LIKE_KW",     
  "MATCH",         "NO",            "PLAN",          "QUERY",       
  "OF",            "OFFSET",        "PRAGMA",        "RAISE",       
  "RECURSIVE",     "RELEASE",       "REPLACE",       "RESTRICT",    
  "ROW",           "SAVEPOINT",     "TEMP",          "TRIGGER",     
  "VACUUM",        "VIEW",          "WITHOUT",       "EXTRACT",     
  "TIMESTAMPADD",  "TIMESTAMPDIFF",  "YEAR",          "MONTH",       
  "DAY",           "WEEK",          "HOUR",          "MINUTE",      
  "SECOND",        "MILLISECOND",   "MICROSECOND",   "NANOSECOND",  
  "GLOB",          "LIKE",          "REGEXP",        "TRUE",        
  "FALSE",         "FORCE",         "TIMESTAMP_TRUNC",  "DAY_OF_WEEK", 
  "DAY_OF_YEAR",   "WITHIN",        "FILL",          "NONE",        
  "PREVIOUS",      "LINEAR",        "ROWS",          "UNBOUNDED",   
  "ANY",           "OR",            "XOR",           "AND",         
  "IS",            "BETWEEN",       "IN",            "ISNULL",      
  "NOTNULL",       "NE",            "GT",            "LE",          
  "LT",            "GE",            "ESCAPE",        "BITAND",      
  "BITOR",         "LSHIFT",        "RSHIFT",        "STAR",        
  "SLASH",         "REM",           "CONCAT",        "COLLATE",     
  "BITNOT",        "DROP",          "USER",          "IDENTIFIED",  
  "SET",           "PASSWORD",      "ROLE",          "GRANT",       
  "ALL",           "ON",            "TO",            "SELECT",      
  "REVOKE",        "FROM",          "INDEX",         "DOT",         
  "ALTER",         "RENAME",        "ADD",           "UNION",       
  "EXCEPT",        "INTERSECT",     "VALUES",        "HINT_START",  
  "HINT_END",      "DISTINCT",      "JOIN",          "INNER",       
  "CROSS",         "LEFT",          "OUTER",         "RIGHT",       
  "FULL",          "NATURAL",       "ORDER",         "GROUP",       
  "HAVING",        "LIMIT",         "WHERE",         "DELETE",      
  "UPDATE",        "INTO",          "INSERT",        "BLOB",        
  "VARIABLE",      "OVER",          "PRECEDING",     "FOLLOWING",   
  "CURRENT",       "CASE",          "WHEN",          "THEN",        
  "ELSE",          "error",         "input",         "cmdlist",     
  "ecmd",          "explain",       "cmdx",          "cmd",         
  "trans_opt",     "create_table",  "createkw",      "ifnotexists", 
  "nm",            "dbnm",          "columnlist",    "conslist_opt",
  "is_timeseries",  "createtable_opt",  "partitioning_options",  "column",      
  "typetoken",     "carglist",      "expr",          "singlecol",   
  "intervalOption",  "fieldType",     "groupIntervalOption",  "intervalOptionDetail",
  "createtable_optlist",  "create_virtual_table",  "plus_num",      "minus_num",   
  "typename",      "signed",        "conslist",      "tcons",       
  "idxlist",       "orconf",        "resolvetype",   "ifexists",    
  "fullname",      "create_view",   "force",         "select",      
  "using_options",  "exprlist",      "idxlist_opt",   "sortascending",
  "addcolumnlist",  "renamecolumn",  "addcolumn",     "hint_opt",    
  "selectnowith",  "oneselect",     "multiselect_op",  "distinct",    
  "selcollist",    "from",          "where_opt",     "groupby_opt", 
  "having_opt",    "orderby_opt",   "limit_opt",     "valuelist",   
  "nexprlist",     "hintlist",      "hintlist1",     "onehint",     
  "hintexprlist",  "hintexprlist1",  "hintexpr",      "term",        
  "sclp",          "as",            "seltabtree",    "stl_prefix",  
  "joinop",        "on_opt",        "using_opt",     "idlist",      
  "sortlist",      "groupFillOption",  "groupFillOptionBase",  "setlist",     
  "insert_cmd",    "inscollist_opt",  "field",         "window_opt",  
  "partitionby_opt",  "frame_opt",     "frame_boundary",  "likeop",      
  "between_op",    "in_op",         "case_operand",  "case_exprlist",
  "case_else",   
	};
#endif /* NDEBUG */

#ifndef NDEBUG
	/* For tracing reduce actions, the names of all rules are required.
	 */
	const char *const SQLParser::yyRuleName[] = {
 /*   0 */ "input ::= cmdlist",
 /*   1 */ "cmdlist ::= cmdlist ecmd",
 /*   2 */ "cmdlist ::= ecmd",
 /*   3 */ "ecmd ::= SEMI",
 /*   4 */ "ecmd ::= explain cmdx SEMI",
 /*   5 */ "explain ::=",
 /*   6 */ "explain ::= EXPLAIN",
 /*   7 */ "explain ::= EXPLAIN ANALYZE",
 /*   8 */ "cmdx ::= cmd",
 /*   9 */ "cmd ::= BEGIN trans_opt",
 /*  10 */ "trans_opt ::=",
 /*  11 */ "trans_opt ::= TRANSACTION",
 /*  12 */ "cmd ::= COMMIT trans_opt",
 /*  13 */ "cmd ::= END trans_opt",
 /*  14 */ "cmd ::= ROLLBACK trans_opt",
 /*  15 */ "cmd ::= create_table",
 /*  16 */ "create_table ::= createkw TABLE ifnotexists nm dbnm LP columnlist conslist_opt RP is_timeseries createtable_opt partitioning_options",
 /*  17 */ "createkw ::= CREATE",
 /*  18 */ "ifnotexists ::=",
 /*  19 */ "ifnotexists ::= IF NOT EXISTS",
 /*  20 */ "columnlist ::= column",
 /*  21 */ "columnlist ::= columnlist COMMA column",
 /*  22 */ "column ::= nm typetoken carglist",
 /*  23 */ "carglist ::=",
 /*  24 */ "carglist ::= carglist PRIMARY KEY",
 /*  25 */ "carglist ::= carglist NOT NULL",
 /*  26 */ "carglist ::= carglist NULL",
 /*  27 */ "carglist ::= carglist AS LP expr RP VIRTUAL",
 /*  28 */ "partitioning_options ::=",
 /*  29 */ "partitioning_options ::= PARTITION BY HASH singlecol PARTITIONS INTEGER",
 /*  30 */ "partitioning_options ::= PARTITION BY RANGE|INTERVAL singlecol intervalOption",
 /*  31 */ "partitioning_options ::= PARTITION BY RANGE|INTERVAL singlecol intervalOption SUBPARTITION BY HASH singlecol SUBPARTITIONS INTEGER",
 /*  32 */ "intervalOption ::= EVERY LP INTEGER RP",
 /*  33 */ "intervalOption ::= EVERY LP INTEGER COMMA fieldType RP",
 /*  34 */ "groupIntervalOption ::= EVERY LP INTEGER COMMA fieldType intervalOptionDetail RP",
 /*  35 */ "intervalOptionDetail ::=",
 /*  36 */ "intervalOptionDetail ::= COMMA INTEGER",
 /*  37 */ "intervalOptionDetail ::= COMMA STRING",
 /*  38 */ "intervalOptionDetail ::= COMMA INTEGER COMMA STRING",
 /*  39 */ "is_timeseries ::=",
 /*  40 */ "is_timeseries ::= USING TIMESERIES",
 /*  41 */ "singlecol ::= nm",
 /*  42 */ "singlecol ::= LP nm RP",
 /*  43 */ "createtable_opt ::=",
 /*  44 */ "createtable_opt ::= WITH LP createtable_optlist RP",
 /*  45 */ "createtable_optlist ::= createtable_optlist COMMA nm EQ expr",
 /*  46 */ "createtable_optlist ::= nm EQ expr",
 /*  47 */ "cmd ::= create_virtual_table",
 /*  48 */ "create_virtual_table ::= createkw VIRTUAL TABLE ifnotexists nm dbnm LP columnlist conslist_opt RP USING nm createtable_opt partitioning_options",
 /*  49 */ "plus_num ::= PLUS INTEGER|FLOAT",
 /*  50 */ "plus_num ::= INTEGER|FLOAT",
 /*  51 */ "minus_num ::= MINUS INTEGER|FLOAT",
 /*  52 */ "nm ::= ID",
 /*  53 */ "typetoken ::= typename",
 /*  54 */ "typetoken ::= typename LP signed RP",
 /*  55 */ "typetoken ::= typename LP signed RP typename",
 /*  56 */ "typetoken ::= typename LP signed COMMA signed RP",
 /*  57 */ "typetoken ::= typename LP signed COMMA signed RP typename",
 /*  58 */ "typename ::= ID",
 /*  59 */ "typename ::= typename ID",
 /*  60 */ "signed ::= plus_num",
 /*  61 */ "signed ::= minus_num",
 /*  62 */ "conslist_opt ::=",
 /*  63 */ "conslist_opt ::= COMMA conslist",
 /*  64 */ "conslist ::= tcons",
 /*  65 */ "tcons ::= PRIMARY KEY LP idxlist RP",
 /*  66 */ "orconf ::=",
 /*  67 */ "orconf ::= OR resolvetype",
 /*  68 */ "resolvetype ::= IGNORE",
 /*  69 */ "resolvetype ::= REPLACE",
 /*  70 */ "cmd ::= DROP TABLE ifexists fullname",
 /*  71 */ "ifexists ::= IF EXISTS",
 /*  72 */ "ifexists ::=",
 /*  73 */ "cmd ::= create_view",
 /*  74 */ "create_view ::= CREATE force VIEW nm dbnm AS select",
 /*  75 */ "force ::=",
 /*  76 */ "force ::= FORCE",
 /*  77 */ "cmd ::= DROP VIEW ifexists fullname",
 /*  78 */ "cmd ::= CREATE DATABASE nm",
 /*  79 */ "cmd ::= DROP DATABASE nm",
 /*  80 */ "cmd ::= CREATE USER nm IDENTIFIED BY STRING",
 /*  81 */ "cmd ::= CREATE USER nm",
 /*  82 */ "cmd ::= SET PASSWORD FOR nm EQ STRING",
 /*  83 */ "cmd ::= SET PASSWORD EQ STRING",
 /*  84 */ "cmd ::= DROP USER nm",
 /*  85 */ "cmd ::= CREATE ROLE nm",
 /*  86 */ "cmd ::= DROP ROLE nm",
 /*  87 */ "cmd ::= GRANT ALL ON nm TO nm",
 /*  88 */ "cmd ::= GRANT SELECT ON nm TO nm",
 /*  89 */ "cmd ::= REVOKE ALL ON nm FROM nm",
 /*  90 */ "cmd ::= REVOKE SELECT ON nm FROM nm",
 /*  91 */ "cmd ::= CREATE INDEX ifnotexists nm ON nm dbnm LP idxlist RP using_options",
 /*  92 */ "using_options ::=",
 /*  93 */ "using_options ::= USING nm LP exprlist RP",
 /*  94 */ "idxlist ::= idxlist COMMA nm sortascending",
 /*  95 */ "idxlist ::= nm sortascending",
 /*  96 */ "sortascending ::= ASC",
 /*  97 */ "sortascending ::= DESC",
 /*  98 */ "sortascending ::=",
 /*  99 */ "cmd ::= DROP INDEX ifexists nm ON nm dbnm",
 /* 100 */ "cmd ::= DROP INDEX ifexists nm DOT nm dbnm",
 /* 101 */ "cmd ::= DROP INDEX ifexists nm",
 /* 102 */ "cmd ::= ALTER TABLE nm DROP PARTITION FOR LP expr RP",
 /* 103 */ "cmd ::= ALTER TABLE nm addcolumnlist",
 /* 104 */ "cmd ::= ALTER TABLE nm RENAME COLUMNKW renamecolumn TO renamecolumn",
 /* 105 */ "renamecolumn ::= nm",
 /* 106 */ "addcolumnlist ::= addcolumn",
 /* 107 */ "addcolumnlist ::= addcolumnlist COMMA addcolumn",
 /* 108 */ "addcolumn ::= ADD nm typetoken carglist",
 /* 109 */ "addcolumn ::= ADD COLUMNKW nm typetoken carglist",
 /* 110 */ "cmd ::= PRAGMA nm DOT nm DOT nm EQ nm",
 /* 111 */ "cmd ::= PRAGMA nm DOT nm DOT nm EQ plus_num",
 /* 112 */ "cmd ::= PRAGMA nm DOT nm DOT nm EQ minus_num",
 /* 113 */ "cmd ::= hint_opt select",
 /* 114 */ "select ::= oneselect",
 /* 115 */ "select ::= select multiselect_op oneselect",
 /* 116 */ "multiselect_op ::= UNION",
 /* 117 */ "multiselect_op ::= UNION ALL",
 /* 118 */ "multiselect_op ::= EXCEPT",
 /* 119 */ "multiselect_op ::= INTERSECT",
 /* 120 */ "oneselect ::= SELECT hint_opt distinct selcollist from where_opt groupby_opt having_opt orderby_opt limit_opt",
 /* 121 */ "select ::= valuelist",
 /* 122 */ "valuelist ::= VALUES LP nexprlist RP",
 /* 123 */ "valuelist ::= valuelist COMMA LP exprlist RP",
 /* 124 */ "hint_opt ::= HINT_START hintlist HINT_END",
 /* 125 */ "hint_opt ::=",
 /* 126 */ "hintlist ::= hintlist1",
 /* 127 */ "hintlist ::=",
 /* 128 */ "hintlist1 ::= hintlist1 onehint",
 /* 129 */ "hintlist1 ::= onehint",
 /* 130 */ "onehint ::= ID LP hintexprlist RP",
 /* 131 */ "hintexprlist ::= hintexprlist1",
 /* 132 */ "hintexprlist ::=",
 /* 133 */ "hintexprlist1 ::= hintexprlist1 hintexpr",
 /* 134 */ "hintexprlist1 ::= hintexpr",
 /* 135 */ "hintexpr ::= term",
 /* 136 */ "hintexpr ::= MINUS INTEGER",
 /* 137 */ "hintexpr ::= MINUS FLOAT",
 /* 138 */ "hintexpr ::= LP hintexprlist1 RP",
 /* 139 */ "hintexpr ::= ID",
 /* 140 */ "hintexpr ::= nm DOT nm",
 /* 141 */ "hintexpr ::= nm DOT nm DOT nm",
 /* 142 */ "distinct ::= DISTINCT",
 /* 143 */ "distinct ::= ALL",
 /* 144 */ "distinct ::=",
 /* 145 */ "sclp ::= selcollist COMMA",
 /* 146 */ "sclp ::=",
 /* 147 */ "selcollist ::= sclp expr as",
 /* 148 */ "selcollist ::= sclp STAR",
 /* 149 */ "selcollist ::= sclp nm DOT STAR",
 /* 150 */ "as ::= AS nm",
 /* 151 */ "as ::= ID",
 /* 152 */ "as ::=",
 /* 153 */ "from ::=",
 /* 154 */ "from ::= FROM seltabtree",
 /* 155 */ "stl_prefix ::= seltabtree joinop",
 /* 156 */ "stl_prefix ::=",
 /* 157 */ "seltabtree ::= stl_prefix nm dbnm as on_opt using_opt",
 /* 158 */ "seltabtree ::= stl_prefix nm dbnm LP exprlist RP as on_opt using_opt",
 /* 159 */ "seltabtree ::= stl_prefix LP select RP as on_opt using_opt",
 /* 160 */ "seltabtree ::= stl_prefix LP seltabtree RP as on_opt using_opt",
 /* 161 */ "dbnm ::=",
 /* 162 */ "dbnm ::= DOT nm",
 /* 163 */ "fullname ::= nm dbnm",
 /* 164 */ "joinop ::= COMMA|JOIN",
 /* 165 */ "joinop ::= INNER JOIN",
 /* 166 */ "joinop ::= CROSS JOIN",
 /* 167 */ "joinop ::= LEFT JOIN",
 /* 168 */ "joinop ::= LEFT OUTER JOIN",
 /* 169 */ "joinop ::= RIGHT JOIN",
 /* 170 */ "joinop ::= RIGHT OUTER JOIN",
 /* 171 */ "joinop ::= FULL JOIN",
 /* 172 */ "joinop ::= FULL OUTER JOIN",
 /* 173 */ "joinop ::= NATURAL JOIN",
 /* 174 */ "joinop ::= NATURAL INNER JOIN",
 /* 175 */ "joinop ::= NATURAL CROSS JOIN",
 /* 176 */ "joinop ::= NATURAL LEFT JOIN",
 /* 177 */ "joinop ::= NATURAL LEFT OUTER JOIN",
 /* 178 */ "joinop ::= NATURAL RIGHT JOIN",
 /* 179 */ "joinop ::= NATURAL RIGHT OUTER JOIN",
 /* 180 */ "joinop ::= NATURAL FULL JOIN",
 /* 181 */ "joinop ::= NATURAL FULL OUTER JOIN",
 /* 182 */ "on_opt ::= ON expr",
 /* 183 */ "on_opt ::=",
 /* 184 */ "using_opt ::= USING LP idlist RP",
 /* 185 */ "using_opt ::=",
 /* 186 */ "orderby_opt ::=",
 /* 187 */ "orderby_opt ::= ORDER BY sortlist",
 /* 188 */ "sortlist ::= sortlist COMMA expr sortascending",
 /* 189 */ "sortlist ::= expr sortascending",
 /* 190 */ "groupby_opt ::=",
 /* 191 */ "groupby_opt ::= GROUP BY nexprlist",
 /* 192 */ "groupby_opt ::= GROUP BY RANGE LP expr RP groupIntervalOption groupFillOption",
 /* 193 */ "groupFillOption ::=",
 /* 194 */ "groupFillOption ::= FILL LP groupFillOptionBase RP",
 /* 195 */ "groupFillOptionBase ::= NULL",
 /* 196 */ "groupFillOptionBase ::= NONE",
 /* 197 */ "groupFillOptionBase ::= LINEAR",
 /* 198 */ "groupFillOptionBase ::= PREVIOUS",
 /* 199 */ "groupFillOptionBase ::= ID",
 /* 200 */ "having_opt ::=",
 /* 201 */ "having_opt ::= HAVING expr",
 /* 202 */ "limit_opt ::=",
 /* 203 */ "limit_opt ::= LIMIT expr",
 /* 204 */ "limit_opt ::= LIMIT expr OFFSET expr",
 /* 205 */ "limit_opt ::= LIMIT expr COMMA expr",
 /* 206 */ "where_opt ::=",
 /* 207 */ "where_opt ::= WHERE expr",
 /* 208 */ "cmd ::= hint_opt DELETE hint_opt FROM fullname as where_opt",
 /* 209 */ "cmd ::= hint_opt UPDATE hint_opt orconf fullname as SET setlist where_opt",
 /* 210 */ "setlist ::= setlist COMMA nm EQ expr",
 /* 211 */ "setlist ::= nm EQ expr",
 /* 212 */ "cmd ::= hint_opt insert_cmd hint_opt INTO fullname inscollist_opt select",
 /* 213 */ "insert_cmd ::= INSERT orconf",
 /* 214 */ "insert_cmd ::= REPLACE",
 /* 215 */ "inscollist_opt ::=",
 /* 216 */ "inscollist_opt ::= LP idlist RP",
 /* 217 */ "idlist ::= idlist COMMA nm",
 /* 218 */ "idlist ::= nm",
 /* 219 */ "expr ::= term",
 /* 220 */ "expr ::= LP expr RP",
 /* 221 */ "term ::= NULL",
 /* 222 */ "expr ::= ID",
 /* 223 */ "expr ::= nm DOT nm",
 /* 224 */ "expr ::= nm DOT nm DOT nm",
 /* 225 */ "term ::= INTEGER",
 /* 226 */ "term ::= FLOAT",
 /* 227 */ "term ::= TRUE",
 /* 228 */ "term ::= FALSE",
 /* 229 */ "term ::= BLOB",
 /* 230 */ "term ::= STRING",
 /* 231 */ "expr ::= VARIABLE",
 /* 232 */ "expr ::= CAST LP expr AS typetoken RP",
 /* 233 */ "expr ::= EXTRACT LP field COMMA exprlist RP",
 /* 234 */ "expr ::= TIMESTAMPADD LP field COMMA exprlist RP",
 /* 235 */ "expr ::= TIMESTAMPDIFF LP field COMMA exprlist RP",
 /* 236 */ "expr ::= TIMESTAMP_TRUNC LP field COMMA exprlist RP",
 /* 237 */ "field ::= fieldType",
 /* 238 */ "fieldType ::= YEAR",
 /* 239 */ "fieldType ::= MONTH",
 /* 240 */ "fieldType ::= DAY",
 /* 241 */ "fieldType ::= HOUR",
 /* 242 */ "fieldType ::= MINUTE",
 /* 243 */ "fieldType ::= SECOND",
 /* 244 */ "fieldType ::= MILLISECOND",
 /* 245 */ "fieldType ::= MICROSECOND",
 /* 246 */ "fieldType ::= NANOSECOND",
 /* 247 */ "fieldType ::= DAY_OF_WEEK",
 /* 248 */ "fieldType ::= DAY_OF_YEAR",
 /* 249 */ "fieldType ::= ID",
 /* 250 */ "expr ::= ID LP distinct exprlist RP window_opt",
 /* 251 */ "expr ::= ID LP STAR RP window_opt",
 /* 252 */ "window_opt ::=",
 /* 253 */ "window_opt ::= OVER LP partitionby_opt orderby_opt RP frame_opt",
 /* 254 */ "partitionby_opt ::=",
 /* 255 */ "partitionby_opt ::= PARTITION BY nexprlist",
 /* 256 */ "frame_opt ::=",
 /* 257 */ "frame_opt ::= ROWS frame_boundary",
 /* 258 */ "frame_opt ::= RANGE frame_boundary",
 /* 259 */ "frame_opt ::= ROWS BETWEEN frame_boundary AND frame_boundary",
 /* 260 */ "frame_opt ::= RANGE BETWEEN frame_boundary AND frame_boundary",
 /* 261 */ "frame_boundary ::= UNBOUNDED PRECEDING",
 /* 262 */ "frame_boundary ::= UNBOUNDED FOLLOWING",
 /* 263 */ "frame_boundary ::= CURRENT ROW",
 /* 264 */ "frame_boundary ::= expr PRECEDING",
 /* 265 */ "frame_boundary ::= expr FOLLOWING",
 /* 266 */ "frame_boundary ::= LP INTEGER COMMA fieldType RP PRECEDING",
 /* 267 */ "frame_boundary ::= LP INTEGER COMMA fieldType RP FOLLOWING",
 /* 268 */ "frame_boundary ::= PRECEDING",
 /* 269 */ "frame_boundary ::= FOLLOWING",
 /* 270 */ "expr ::= ID LP distinct exprlist RP WITHIN GROUP LP ORDER BY sortlist RP",
 /* 271 */ "expr ::= expr AND expr",
 /* 272 */ "expr ::= expr OR expr",
 /* 273 */ "expr ::= expr LT expr",
 /* 274 */ "expr ::= expr GT expr",
 /* 275 */ "expr ::= expr GE expr",
 /* 276 */ "expr ::= expr LE expr",
 /* 277 */ "expr ::= expr EQ expr",
 /* 278 */ "expr ::= expr NE expr",
 /* 279 */ "expr ::= expr BITAND expr",
 /* 280 */ "expr ::= expr BITOR expr",
 /* 281 */ "expr ::= expr LSHIFT expr",
 /* 282 */ "expr ::= expr RSHIFT expr",
 /* 283 */ "expr ::= expr PLUS expr",
 /* 284 */ "expr ::= expr MINUS expr",
 /* 285 */ "expr ::= expr STAR expr",
 /* 286 */ "expr ::= expr SLASH expr",
 /* 287 */ "expr ::= expr REM expr",
 /* 288 */ "expr ::= expr CONCAT expr",
 /* 289 */ "likeop ::= LIKE_KW|MATCH",
 /* 290 */ "likeop ::= NOT LIKE_KW|MATCH",
 /* 291 */ "expr ::= expr likeop expr",
 /* 292 */ "expr ::= expr likeop expr ESCAPE expr",
 /* 293 */ "expr ::= expr ISNULL",
 /* 294 */ "expr ::= expr NOTNULL",
 /* 295 */ "expr ::= expr NOT NULL",
 /* 296 */ "expr ::= expr IS expr",
 /* 297 */ "expr ::= expr IS NOT expr",
 /* 298 */ "expr ::= NOT expr",
 /* 299 */ "expr ::= BITNOT expr",
 /* 300 */ "expr ::= MINUS expr",
 /* 301 */ "expr ::= PLUS expr",
 /* 302 */ "between_op ::= BETWEEN",
 /* 303 */ "between_op ::= NOT BETWEEN",
 /* 304 */ "expr ::= expr between_op expr AND expr",
 /* 305 */ "in_op ::= IN",
 /* 306 */ "in_op ::= NOT IN",
 /* 307 */ "expr ::= expr in_op LP exprlist RP",
 /* 308 */ "expr ::= LP select RP",
 /* 309 */ "expr ::= expr in_op LP select RP",
 /* 310 */ "expr ::= EXISTS LP select RP",
 /* 311 */ "expr ::= CASE case_operand case_exprlist case_else END",
 /* 312 */ "case_exprlist ::= case_exprlist WHEN expr THEN expr",
 /* 313 */ "case_exprlist ::= WHEN expr THEN expr",
 /* 314 */ "case_else ::= ELSE expr",
 /* 315 */ "case_else ::=",
 /* 316 */ "case_operand ::= expr",
 /* 317 */ "case_operand ::=",
 /* 318 */ "exprlist ::= nexprlist",
 /* 319 */ "exprlist ::=",
 /* 320 */ "nexprlist ::= nexprlist COMMA expr",
 /* 321 */ "nexprlist ::= expr",
	};
#endif /* NDEBUG */

	const struct SQLParser::RULEINFO SQLParser::yyRuleInfo[] = {
  { 190, 1 },
  { 191, 2 },
  { 191, 1 },
  { 192, 1 },
  { 192, 3 },
  { 193, 0 },
  { 193, 1 },
  { 193, 2 },
  { 194, 1 },
  { 195, 2 },
  { 196, 0 },
  { 196, 1 },
  { 195, 2 },
  { 195, 2 },
  { 195, 2 },
  { 195, 1 },
  { 197, 12 },
  { 198, 1 },
  { 199, 0 },
  { 199, 3 },
  { 202, 1 },
  { 202, 3 },
  { 207, 3 },
  { 209, 0 },
  { 209, 3 },
  { 209, 3 },
  { 209, 2 },
  { 209, 6 },
  { 206, 0 },
  { 206, 6 },
  { 206, 5 },
  { 206, 11 },
  { 212, 4 },
  { 212, 6 },
  { 214, 7 },
  { 215, 0 },
  { 215, 2 },
  { 215, 2 },
  { 215, 4 },
  { 204, 0 },
  { 204, 2 },
  { 211, 1 },
  { 211, 3 },
  { 205, 0 },
  { 205, 4 },
  { 216, 5 },
  { 216, 3 },
  { 195, 1 },
  { 217, 14 },
  { 218, 2 },
  { 218, 1 },
  { 219, 2 },
  { 200, 1 },
  { 208, 1 },
  { 208, 4 },
  { 208, 5 },
  { 208, 6 },
  { 208, 7 },
  { 220, 1 },
  { 220, 2 },
  { 221, 1 },
  { 221, 1 },
  { 203, 0 },
  { 203, 2 },
  { 222, 1 },
  { 223, 5 },
  { 225, 0 },
  { 225, 2 },
  { 226, 1 },
  { 226, 1 },
  { 195, 4 },
  { 227, 2 },
  { 227, 0 },
  { 195, 1 },
  { 229, 7 },
  { 230, 0 },
  { 230, 1 },
  { 195, 4 },
  { 195, 3 },
  { 195, 3 },
  { 195, 6 },
  { 195, 3 },
  { 195, 6 },
  { 195, 4 },
  { 195, 3 },
  { 195, 3 },
  { 195, 3 },
  { 195, 6 },
  { 195, 6 },
  { 195, 6 },
  { 195, 6 },
  { 195, 11 },
  { 232, 0 },
  { 232, 5 },
  { 224, 4 },
  { 224, 2 },
  { 235, 1 },
  { 235, 1 },
  { 235, 0 },
  { 195, 7 },
  { 195, 7 },
  { 195, 4 },
  { 195, 9 },
  { 195, 4 },
  { 195, 8 },
  { 237, 1 },
  { 236, 1 },
  { 236, 3 },
  { 238, 4 },
  { 238, 5 },
  { 195, 8 },
  { 195, 8 },
  { 195, 8 },
  { 195, 2 },
  { 231, 1 },
  { 231, 3 },
  { 242, 1 },
  { 242, 2 },
  { 242, 1 },
  { 242, 1 },
  { 241, 10 },
  { 231, 1 },
  { 251, 4 },
  { 251, 5 },
  { 239, 3 },
  { 239, 0 },
  { 253, 1 },
  { 253, 0 },
  { 254, 2 },
  { 254, 1 },
  { 255, 4 },
  { 256, 1 },
  { 256, 0 },
  { 257, 2 },
  { 257, 1 },
  { 258, 1 },
  { 258, 2 },
  { 258, 2 },
  { 258, 3 },
  { 258, 1 },
  { 258, 3 },
  { 258, 5 },
  { 243, 1 },
  { 243, 1 },
  { 243, 0 },
  { 260, 2 },
  { 260, 0 },
  { 244, 3 },
  { 244, 2 },
  { 244, 4 },
  { 261, 2 },
  { 261, 1 },
  { 261, 0 },
  { 245, 0 },
  { 245, 2 },
  { 263, 2 },
  { 263, 0 },
  { 262, 6 },
  { 262, 9 },
  { 262, 7 },
  { 262, 7 },
  { 201, 0 },
  { 201, 2 },
  { 228, 2 },
  { 264, 1 },
  { 264, 2 },
  { 264, 2 },
  { 264, 2 },
  { 264, 3 },
  { 264, 2 },
  { 264, 3 },
  { 264, 2 },
  { 264, 3 },
  { 264, 2 },
  { 264, 3 },
  { 264, 3 },
  { 264, 3 },
  { 264, 4 },
  { 264, 3 },
  { 264, 4 },
  { 264, 3 },
  { 264, 4 },
  { 265, 2 },
  { 265, 0 },
  { 266, 4 },
  { 266, 0 },
  { 249, 0 },
  { 249, 3 },
  { 268, 4 },
  { 268, 2 },
  { 247, 0 },
  { 247, 3 },
  { 247, 8 },
  { 269, 0 },
  { 269, 4 },
  { 270, 1 },
  { 270, 1 },
  { 270, 1 },
  { 270, 1 },
  { 270, 1 },
  { 248, 0 },
  { 248, 2 },
  { 250, 0 },
  { 250, 2 },
  { 250, 4 },
  { 250, 4 },
  { 246, 0 },
  { 246, 2 },
  { 195, 7 },
  { 195, 9 },
  { 271, 5 },
  { 271, 3 },
  { 195, 7 },
  { 272, 2 },
  { 272, 1 },
  { 273, 0 },
  { 273, 3 },
  { 267, 3 },
  { 267, 1 },
  { 210, 1 },
  { 210, 3 },
  { 259, 1 },
  { 210, 1 },
  { 210, 3 },
  { 210, 5 },
  { 259, 1 },
  { 259, 1 },
  { 259, 1 },
  { 259, 1 },
  { 259, 1 },
  { 259, 1 },
  { 210, 1 },
  { 210, 6 },
  { 210, 6 },
  { 210, 6 },
  { 210, 6 },
  { 210, 6 },
  { 274, 1 },
  { 213, 1 },
  { 213, 1 },
  { 213, 1 },
  { 213, 1 },
  { 213, 1 },
  { 213, 1 },
  { 213, 1 },
  { 213, 1 },
  { 213, 1 },
  { 213, 1 },
  { 213, 1 },
  { 213, 1 },
  { 210, 6 },
  { 210, 5 },
  { 275, 0 },
  { 275, 6 },
  { 276, 0 },
  { 276, 3 },
  { 277, 0 },
  { 277, 2 },
  { 277, 2 },
  { 277, 5 },
  { 277, 5 },
  { 278, 2 },
  { 278, 2 },
  { 278, 2 },
  { 278, 2 },
  { 278, 2 },
  { 278, 6 },
  { 278, 6 },
  { 278, 1 },
  { 278, 1 },
  { 210, 12 },
  { 210, 3 },
  { 210, 3 },
  { 210, 3 },
  { 210, 3 },
  { 210, 3 },
  { 210, 3 },
  { 210, 3 },
  { 210, 3 },
  { 210, 3 },
  { 210, 3 },
  { 210, 3 },
  { 210, 3 },
  { 210, 3 },
  { 210, 3 },
  { 210, 3 },
  { 210, 3 },
  { 210, 3 },
  { 210, 3 },
  { 279, 1 },
  { 279, 2 },
  { 210, 3 },
  { 210, 5 },
  { 210, 2 },
  { 210, 2 },
  { 210, 3 },
  { 210, 3 },
  { 210, 4 },
  { 210, 2 },
  { 210, 2 },
  { 210, 2 },
  { 210, 2 },
  { 280, 1 },
  { 280, 2 },
  { 210, 5 },
  { 281, 1 },
  { 281, 2 },
  { 210, 5 },
  { 210, 3 },
  { 210, 5 },
  { 210, 4 },
  { 210, 5 },
  { 283, 5 },
  { 283, 4 },
  { 284, 2 },
  { 284, 0 },
  { 282, 1 },
  { 282, 0 },
  { 233, 1 },
  { 233, 0 },
  { 252, 3 },
  { 252, 1 },
	};




	/* APPENDIX */
} 
